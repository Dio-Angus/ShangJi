<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AnalyGc</name>
    </assembly>
    <members>
        <member name="T:AnalyGc.EnumDescription">
            <summary>
            把枚举值按照指定的文本显示
            <remarks>
            一般通过枚举值的ToString()可以得到变量的文本，
            但是有时候需要的到与之对应的更充分的文本，
            这个类帮助达到此目的
            Date: 2006-3-25 
            Author: dearzp@hotmail.com
            </remarks>
            </summary>
            <example>
            [EnumDescription("中文数字")]
            enum MyEnum
            {
            	[EnumDescription("数字一")]
            	One = 1, 
            
            	[EnumDescription("数字二")]
            	Two, 
            
            	[EnumDescription("数字三")]
            	Three
            }
            EnumDescription.GetEnumText(typeof(MyEnum));
            EnumDescription.GetFieldText(MyEnum.Two);
            EnumDescription.GetFieldTexts(typeof(MyEnum)); 
            </example>
        </member>
        <member name="M:AnalyGc.EnumDescription.#ctor(System.String,System.Int32)">
            <summary>
            描述枚举值
            </summary>
            <param name="enumDisplayText">描述内容</param>
            <param name="enumRank">排列顺序</param>
        </member>
        <member name="M:AnalyGc.EnumDescription.#ctor(System.String)">
            <summary>
            描述枚举值，默认排序为5
            </summary>
            <param name="enumDisplayText">描述内容</param>
        </member>
        <member name="M:AnalyGc.EnumDescription.GetEnumText(System.Type)">
            <summary>
            得到对枚举的描述文本
            </summary>
            <param name="enumType">枚举类型</param>
            <returns></returns>
        </member>
        <member name="M:AnalyGc.EnumDescription.GetFieldText(System.Object)">
            <summary>
            获得指定枚举类型中，指定值的描述文本。
            </summary>
            <param name="enumValue">枚举值，不要作任何类型转换</param>
            <returns>描述字符串</returns>
        </member>
        <member name="M:AnalyGc.EnumDescription.GetFieldTexts(System.Type)">
            <summary>
            得到枚举类型定义的所有文本，按定义的顺序返回
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
            <param name="enumType">枚举类型</param>
            <returns>所有定义的文本</returns>
        </member>
        <member name="M:AnalyGc.EnumDescription.GetFieldTexts(System.Type,AnalyGc.EnumDescription.SortType)">
            <summary>
            得到枚举类型定义的所有文本
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
            <param name="enumType">枚举类型</param>
            <param name="sortType">指定排序类型</param>
            <returns>所有定义的文本</returns>
        </member>
        <member name="T:AnalyGc.EnumDescription.SortType">
            <summary>
            排序类型
            </summary>
        </member>
        <member name="F:AnalyGc.EnumDescription.SortType.Default">
             <summary>
            按枚举顺序默认排序
             </summary>
        </member>
        <member name="F:AnalyGc.EnumDescription.SortType.DisplayText">
            <summary>
            按描述值排序
            </summary>
        </member>
        <member name="F:AnalyGc.EnumDescription.SortType.Rank">
            <summary>
            按排序熵
            </summary>
        </member>
        <member name="T:AnalyGc.GcDataAnalyFrm">
            <summary>
            分析通道数据窗口
            </summary>
        </member>
        <member name="M:AnalyGc.GcDataAnalyFrm.#ctor">
            <summary>
            构造
            </summary>
        </member>
        <member name="M:AnalyGc.GcDataAnalyFrm.LoadEvent">
            <summary>
            装载事件
            </summary>
        </member>
        <member name="M:AnalyGc.GcDataAnalyFrm.LoadGcFile(System.String)">
            <summary>
            装载文本文件
            </summary>
            <param name="filePathName"></param>
        </member>
        <member name="M:AnalyGc.GcDataAnalyFrm.AnalyGcData">
            <summary>
            分析通道数据
            </summary>
        </member>
        <member name="M:AnalyGc.GcDataAnalyFrm.DealWithGasVoltage(System.String)">
            <summary>
            处理电压值
            </summary>
            <param name="oneFrame"></param>
        </member>
        <member name="M:AnalyGc.GcDataAnalyFrm.btnLoadFile_Click(System.Object,System.EventArgs)">
            <summary>
            装载文件按钮按下
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:AnalyGc.GcDataAnalyFrm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:AnalyGc.GcDataAnalyFrm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:AnalyGc.GcDataAnalyFrm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:AnalyGc.Version2000">
            <summary>
            2000型 桢特征
            </summary>
        </member>
        <member name="F:AnalyGc.Version2000.StartChar">
            <summary>
            桢开始字符
            </summary>
        </member>
        <member name="F:AnalyGc.Version2000.EndChar">
            <summary>
            桢结束字符
            </summary>
        </member>
        <member name="F:AnalyGc.Version2000.FrameLength">
            <summary>
            桢长度 23 A1 A2 A3 A4 A5 A6 MM 21
            </summary>
        </member>
        <member name="F:AnalyGc.Version2000.StartCmdA">
            <summary>
            通道1的开始命令
            </summary>
        </member>
        <member name="F:AnalyGc.Version2000.StartCmdB">
            <summary>
            通道2的开始命令
            </summary>
        </member>
        <member name="T:AnalyGc.GasChannel">
            <summary>
            通道气的通道类型
            </summary>
        </member>
        <member name="F:AnalyGc.GasChannel.A">
            <summary>
            通道A
            </summary>
        </member>
        <member name="F:AnalyGc.GasChannel.B">
            <summary>
            通道B
            </summary>
        </member>
        <member name="F:AnalyGc.GasChannel.C">
            <summary>
            通道C
            </summary>
        </member>
        <member name="F:AnalyGc.GasChannel.D">
            <summary>
            通道D
            </summary>
        </member>
        <member name="F:AnalyGc.GasChannel.E">
            <summary>
            通道E
            </summary>
        </member>
        <member name="F:AnalyGc.GasChannel.F">
            <summary>
            通道F
            </summary>
        </member>
        <member name="T:AnalyGc.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:AnalyGc.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:AnalyGc.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="M:AnalyGc.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
    </members>
</doc>
